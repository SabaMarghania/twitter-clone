[{"/home/sab4/Desktop/twitter-clone/client/src/index.js":"1","/home/sab4/Desktop/twitter-clone/client/src/App.js":"2","/home/sab4/Desktop/twitter-clone/client/src/store.js":"3","/home/sab4/Desktop/twitter-clone/client/src/components/SidebarRight.js":"4","/home/sab4/Desktop/twitter-clone/client/src/components/Sidebar.js":"5","/home/sab4/Desktop/twitter-clone/client/src/components/Login.js":"6","/home/sab4/Desktop/twitter-clone/client/src/components/Home.js":"7","/home/sab4/Desktop/twitter-clone/client/src/components/LoginPage.js":"8","/home/sab4/Desktop/twitter-clone/client/src/components/Register.js":"9","/home/sab4/Desktop/twitter-clone/client/src/reducers/useReducer.js":"10","/home/sab4/Desktop/twitter-clone/client/src/components/Chat.js":"11","/home/sab4/Desktop/twitter-clone/client/src/components/MessagesPage.js":"12","/home/sab4/Desktop/twitter-clone/client/src/components/Post.js":"13","/home/sab4/Desktop/twitter-clone/client/src/components/ErrorMessage.js":"14","/home/sab4/Desktop/twitter-clone/client/src/components/Poll.js":"15","/home/sab4/Desktop/twitter-clone/client/src/Icons/HomeIcon.js":"16","/home/sab4/Desktop/twitter-clone/client/src/Icons/Sharp.js":"17","/home/sab4/Desktop/twitter-clone/client/src/actions/userAction.js":"18","/home/sab4/Desktop/twitter-clone/client/src/components/ChatProfile.js":"19","/home/sab4/Desktop/twitter-clone/client/src/constants/userConstant.js":"20"},{"size":499,"mtime":1630931412000,"results":"21","hashOfConfig":"22"},{"size":1507,"mtime":1630996015930,"results":"23","hashOfConfig":"22"},{"size":735,"mtime":1630931412000,"results":"24","hashOfConfig":"22"},{"size":2215,"mtime":1630931412000,"results":"25","hashOfConfig":"22"},{"size":4073,"mtime":1631895587674,"results":"26","hashOfConfig":"22"},{"size":1261,"mtime":1630931412000,"results":"27","hashOfConfig":"22"},{"size":6942,"mtime":1631895340548,"results":"28","hashOfConfig":"22"},{"size":2203,"mtime":1631867663186,"results":"29","hashOfConfig":"22"},{"size":4334,"mtime":1631893128754,"results":"30","hashOfConfig":"22"},{"size":955,"mtime":1630931412000,"results":"31","hashOfConfig":"22"},{"size":4317,"mtime":1631864794656,"results":"32","hashOfConfig":"22"},{"size":1757,"mtime":1630931412000,"results":"33","hashOfConfig":"22"},{"size":4961,"mtime":1631864285961,"results":"34","hashOfConfig":"22"},{"size":279,"mtime":1630931412000,"results":"35","hashOfConfig":"22"},{"size":8557,"mtime":1631864321731,"results":"36","hashOfConfig":"22"},{"size":720,"mtime":1630931412000,"results":"37","hashOfConfig":"22"},{"size":896,"mtime":1630931412000,"results":"38","hashOfConfig":"22"},{"size":2056,"mtime":1631893019433,"results":"39","hashOfConfig":"22"},{"size":1994,"mtime":1631864656964,"results":"40","hashOfConfig":"22"},{"size":385,"mtime":1630931412000,"results":"41","hashOfConfig":"22"},{"filePath":"42","messages":"43","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},"1dqoxfs",{"filePath":"45","messages":"46","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"47","messages":"48","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"49","messages":"50","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"51","messages":"52","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"53","messages":"54","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"55","messages":"56","errorCount":0,"fatalErrorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"57","messages":"58","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"59","messages":"60","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"61","messages":"62","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"63","messages":"64","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"65","usedDeprecatedRules":"44"},{"filePath":"66","messages":"67","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"68","messages":"69","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":3,"source":"70","usedDeprecatedRules":"44"},{"filePath":"71","messages":"72","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"73","messages":"74","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":2,"source":"75","usedDeprecatedRules":"44"},{"filePath":"76","messages":"77","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"78","messages":"79","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"80","messages":"81","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"82","messages":"83","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":1,"source":"84","usedDeprecatedRules":"44"},{"filePath":"85","messages":"86","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},"/home/sab4/Desktop/twitter-clone/client/src/index.js",[],["87","88"],"/home/sab4/Desktop/twitter-clone/client/src/App.js",[],"/home/sab4/Desktop/twitter-clone/client/src/store.js",[],"/home/sab4/Desktop/twitter-clone/client/src/components/SidebarRight.js",[],"/home/sab4/Desktop/twitter-clone/client/src/components/Sidebar.js",[],"/home/sab4/Desktop/twitter-clone/client/src/components/Login.js",[],"/home/sab4/Desktop/twitter-clone/client/src/components/Home.js",["89","90","91","92","93"],"/home/sab4/Desktop/twitter-clone/client/src/components/LoginPage.js",[],"/home/sab4/Desktop/twitter-clone/client/src/components/Register.js",[],"/home/sab4/Desktop/twitter-clone/client/src/reducers/useReducer.js",[],"/home/sab4/Desktop/twitter-clone/client/src/components/Chat.js",["94"],"import React,{useState,useEffect} from 'react'\nimport './Chat.css'\nimport Avatar from '@material-ui/core/Avatar';\nimport SettingsOutlinedIcon from '@material-ui/icons/SettingsOutlined';\nimport ImageOutlinedIcon from '@material-ui/icons/ImageOutlined';\nimport SendIcon from '@material-ui/icons/Send';\nimport ChatProfile from './ChatProfile';\nimport Axios from 'axios'\n\nfunction Chat() {\n    const [message, setMessage] = useState('')\n    const [messages, setMessages] = useState([])\n    const [fileData, setFileData] = useState('');\n    const [load, setLoad] = useState(false);\n    const [images, setFile] = useState(\"\");\n\n    const onChangeFile = (e) =>{\n        setFileData(e.target.files[0]);\n        setFile(e.target.value)\n    }\n\n    useEffect(() => {\n        let flag = true\n     // http://localhost:3001\n        Axios.get(\"http://localhost:3001/getMessages\",)\n            .then((res) => {\n                if (flag) {\n                    setMessages(res.data);\n                }\n            })\n            if(load) {\n                setTimeout(() => {\n                  setLoad(false);\n                }, 1000)\n              }\n          \n        return () => flag = false\n    }, [load])\n\n    const HandleMessage = async (e)  =>{\n        if(load===false){\n            setLoad(true)\n        }else{\n            setLoad(false)\n        }\n        e.preventDefault()\n        const formData = new FormData();\n        formData.append(\"message\", message)\n        formData.append(\"image\", fileData)\n       \n\n       await Axios.post(\"http://localhost:3001/message\",formData)\n       .then(() => {\n        setFileData('');\n        setMessage('');\n        setLoad(true);\n      })\n       .catch((err)=>{\n           console.log(err);\n       })\n\n    }\n    const HandleText =  async (e)  =>{\n        if(load===false){\n            setLoad(true)\n        }else{\n            setLoad(false)\n        }\n        e.preventDefault()\n        const formData = new FormData();\n        formData.append(\"message\", message)\n       \n\n        await Axios.post(\"http://localhost:3001/message2\",formData)\n        .then(() => {\n            setMessage('');\n            setLoad(true);\n          })\n        .catch((err)=>{\n            console.log(err);\n        })\n \n    }\n\n \n    \n    return (\n        <div className='chat'>\n            <div className='chat__container'>\n            <div className=\"chat__top__box\">\n                <Avatar style={{width:'30px',height:'30px'}}/>\n                <div className=\"chat__top__box__cont\">\n                    <h3>Saba Marghania</h3>\n                    <p>@SMarghania</p>\n                </div>\n            </div>\n            <SettingsOutlinedIcon style={{cursor:'pointer'}}/>\n            </div>\n            \n            <div className=\"chat__message__section\">\n             {messages.map((value)=>{\n                  return (\n                      <ChatProfile\n                      key={value._id}\n                      id={value._id}\n                      message={value.message}\n                      messageimg={value.image}\n                      />\n                  )\n              })}\n            </div>\n\n            <div className=\"chat__bottom__box\">\n                <div className=\"chat__bottom__form\">\n                    <div className=\"chat__bottom__icons\">\n                    <div className=\"home__uploadImage\">\n                        <label htmlFor=\"messageImage\">\n                            <ImageOutlinedIcon style={{color:'rgba(29,161,242,1.00)',cursor:'pointer'}}/>\n                        </label>\n                        <input id=\"messageImage\" \n                        onChange={onChangeFile} \n                        name=\"file\" \n                        type=\"file\" \n                        />\n\n                    </div>\n                    </div>\n                    <div className=\"chat__bottom__input\">\n                        <input onChange={ (e) => setMessage(e.target.value)} type=\"text\" placeholder='Start a new message' />\n                    </div>\n                    <div className=\"chat__bottom__icons2 \">\n                  { (message || fileData)  &&    <SendIcon  onClick={fileData ? HandleMessage : HandleText} style={{color: \"rgb(29, 161, 242)\",cursor:'pointer'}} />\n }\n  </div>\n                </div>\n            </div>\n        </div>\n    )\n}\n\nexport default Chat\n","/home/sab4/Desktop/twitter-clone/client/src/components/MessagesPage.js",[],"/home/sab4/Desktop/twitter-clone/client/src/components/Post.js",["95","96","97","98"],"import React,{useState} from 'react'\nimport './Post.css'\nimport Avatar from '@material-ui/core/Avatar';\nimport MoreHorizIcon from '@material-ui/icons/MoreHoriz';\nimport ClickAwayListener from '@material-ui/core/ClickAwayListener';\nimport DeleteOutlineIcon from '@material-ui/icons/DeleteOutline';\nimport EditOutlinedIcon from '@material-ui/icons/EditOutlined';\nimport Axios from 'axios'\nimport Modal from '@material-ui/core/Modal';\nimport {  useSelector } from \"react-redux\";\n\nfunction Post({post,image,id}) {\n    const [open, setOpen] = useState(false);\n    const [Isopen, setIsOpen] = useState(false);\n    const [update, setUpdate] = useState(false);\n    const [newText, setNewText] = useState('')\n    const [newFile, setNewFile] = useState('')\n    const [newFileData, setNewFileData] = useState('')\n\n    //file\n\n    const onChangeFile = (e) =>{\n     setNewFile(e.target.files[0]);\n     setNewFileData(e.target.value)\n   }\n\n //modal\n const handleClick = () => {\n    setOpen((prev) => !prev);\n  };\n\n  const handleClickAway = () => {\n    setOpen(false);\n  };\n\n  //edit & del modal\n  const handleOpen = () => {\n    setIsOpen(true);\n  };\n\n  const handleClose = () => {\n    setIsOpen(false);\n  };\n  const userLogin = useSelector((state) => state.userLogin);\n  const {userInfo } = userLogin;\n\n//edit post\n/* created two buttons to not get\n  undefined of originalName in nodejs\n\n  editPost will post text and image\n  editPost2 only text\n*/\n  const editPost = () =>{\n    setUpdate(true)\n    \n    setTimeout(()=>{\n        setIsOpen(false);\n\n    },500)\n    const formData = new FormData();\n    formData.append(\"id\", id)\n    formData.append(\"newText\", newText)\n    formData.append(\"image\", newFile)\n    setTimeout(()=>{\n      window. location.reload()\n\n  },1000)\n     Axios.put(\"http://localhost:3001/edit\",formData)\n    \n  }\n  const editPost2 = () =>{\n    setUpdate(true)\n    \n    setTimeout(()=>{\n        setIsOpen(false);\n\n    },500)\n    setTimeout(()=>{\n      window. location.reload()\n\n  },1000)\n    const formData = new FormData();\n    formData.append(\"id\", id)\n    formData.append(\"newText\", newText)\n\n     Axios.put(\"http://localhost:3001/edit2\",formData)\n    \n  }\n  //delete post\n  const delPost = async () =>{\n    window. location.reload()\n\n  await  Axios.delete(`http://localhost:3001/delete/${id}`)\n \n  }\n\n\n  const body = (\n    <div className=\"edit_modal_body\">\n        <h1>Edit the post</h1>\n\n            {update && <h1 style={{color:'green',marginTop:'10px'}}>Post has been updated</h1>}\n        <div className=\"edit_modal_body_cont\">\n            <input onChange={(e)=>{setNewText(e.target.value)}} value={newText} type=\"text\" placeholder='Text..' />\n            <input onChange={onChangeFile} name='file' type=\"file\" />\n        </div>\n        \n        <div className=\"edit_modal_button\">\n            <button onClick={ newFile ? editPost : editPost2} type='submit'>Edit</button>\n        </div>\n   \n    </div>\n  );\n    return (\n       \n        <div className='post'>\n             <Avatar src={userInfo?.pic} style={{width:'50px',height:'50px'}}/>\n            <div className=\"post__info\">\n              <div className=\"post__top_info\">\n                 \n                    <div className=\"post__info_names\">\n                       <h4>{userInfo?.username}</h4>\n                        <p>@{userInfo?.username}</p>\n                     </div>\n                   \n                <div className=\"post__info__edit\">\n                   \n                    <ClickAwayListener onClickAway={handleClickAway}>\n                        <div className='post_modal_root'>\n                        <MoreHorizIcon onClick={handleClick} style={{cursor:'pointer'}}/>\n                            {open ? (\n                            <div className='post_modal_dropdown'>\n                                <div onClick={()=>delPost(id)} className=\"post_modal__option\">\n                                    <DeleteOutlineIcon style={{color:'red'}}/>\n                                    <h4>Delete</h4>\n                                </div>\n                                <div onClick={handleOpen}  className=\"post_modal__option\">\n                                    <EditOutlinedIcon style={{color:'black',fontSize:'20px'}}/>\n                                    <h4 style={{color:'#000'}} >Edit</h4>\n                                </div>\n                            </div>\n                            ) : null}\n                        </div>\n                        </ClickAwayListener>\n                </div>\n                </div>\n                   <p>{post}</p>\n                 {image && <img width='300px' src={image}  alt=\"\"/> }\n\n               \n            </div>\n            <Modal\n                open={Isopen}\n                onClose={handleClose}\n                aria-labelledby=\"simple-modal-title\"\n                aria-describedby=\"simple-modal-description\"\n             >\n                {body}\n            </Modal>\n        </div>\n    )\n}\n\nexport default Post\n","/home/sab4/Desktop/twitter-clone/client/src/components/ErrorMessage.js",[],"/home/sab4/Desktop/twitter-clone/client/src/components/Poll.js",["99","100"],"import React,{useState} from 'react'\nimport Avatar from '@material-ui/core/Avatar';\nimport './Poll.css'\nimport MoreHorizIcon from '@material-ui/icons/MoreHoriz';\nimport ClickAwayListener from '@material-ui/core/ClickAwayListener';\nimport DeleteOutlineIcon from '@material-ui/icons/DeleteOutline';\nimport EditOutlinedIcon from '@material-ui/icons/EditOutlined';\nimport Axios from 'axios'\nimport Modal from '@material-ui/core/Modal';\nimport {  useSelector } from \"react-redux\";\n\nfunction Poll({title,option1,option2,option3,id}) {\n    const [checked,setChecked] = useState(false)\n    const [checked1,setChecked1] = useState(false)\n    const [checked2,setChecked2] = useState(false)\n    let [count,setCount] = useState(0)\n    let [count1,setCount1] = useState(0)\n    let [count2,setCount2] = useState(0)\n    const [Isopen, setIsOpen] = useState(false);\n    const [update, setUpdate] = useState(false);\n    const [open, setOpen] = useState(false);\n\n    //poll edit\n    const [newTitle, setNewTitle] = useState('')\n    const [newOption1, setNewOption1] = useState('')\n    const [newOption2, setNewOption2] = useState('')\n    const [newOption3, setNewOption3] = useState('')\n\n //modal\n const handleClick = () => {\n    setOpen((prev) => !prev);\n  };\n\n  const handleClickAway = () => {\n    setOpen(false);\n  };\n\n        const func = () =>{\n            setCount(count1 || count2===1 ? 0 : 1);\n            setChecked(checked1 || checked2 ? false : true)\n        } \n        const func1 = () =>{\n            setCount1(count || count2===1 ? 0 : 1);\n            setChecked1(checked || checked2 ? false : true)\n        }\n        const func2 = () =>{\n            setCount2(count || count1===1 ? 0 : 1);\n            setChecked2(checked || checked1 ? false : true)\n        }\n        const delFun = () =>{\n            setChecked(false)\n            setChecked1(false)\n            setChecked2(false)\n            setCount(0)\n            setCount1(0)\n            setCount2(0)\n        }\n\n         //edit & del modal\n  const handleOpen = () => {\n    setIsOpen(true);\n  };\n\n  const handleClose = () => {\n    setIsOpen(false);\n  };\n\n  //edit post\n  const editPoll = () =>{\n    setUpdate(true)\n    \n    setTimeout(()=>{\n        setIsOpen(false);\n\n    },500)\n    Axios.put(\"http://localhost:3001/editPoll\",{\n        id:id,\n        newTitle:newTitle,\n        newOption1:newOption1,\n        newOption2:newOption2,\n        newOption3:newOption3,\n     })\n     setTimeout(()=>{\n        window. location.reload()\n  \n    },1000)\n  }\n  //delete post\n  const delPoll = () =>{\n    Axios.delete(`http://localhost:3001/deletePoll/${id}`)\n        window. location.reload()\n  \n  }\n\n  const userLogin = useSelector((state) => state.userLogin);\n  const {userInfo } = userLogin;\n\n  const body = (\n    <div className=\"edit_poll_modal_body\">\n        <h1>Edit the poll</h1>\n\n            {update && <h1 style={{color:'green',marginTop:'10px'}}>Poll has been updated</h1>}\n        <div className=\"edit_poll_modal_body_cont\">\n            <input onChange={(e)=>{setNewTitle(e.target.value)}} type=\"text\" placeholder='Title..' />\n            <input onChange={(e)=>{setNewOption1(e.target.value)}} type=\"text\" placeholder='Option 1..' />\n            <input onChange={(e)=>{setNewOption2(e.target.value)}} type=\"text\" placeholder='Option 2..' />\n            <input onChange={(e)=>{setNewOption3(e.target.value)}} type=\"text\" placeholder='Option 3..' />\n        </div>\n        <div className=\"edit_poll_modal_button\">\n            <button onClick={()=>editPoll(id)} type='submit'>Edit</button>\n        </div>\n   \n    </div>\n  );\n    return (\n        <div className='poll'>\n            <Avatar src={userInfo?.pic} style={{width:'50px',height:'50px'}} />\n            <div className=\"post__info\">\n            <div className=\"post__info_cont\">\n                <div className=\"post__info_names\">\n                    <h4>{userInfo?.username}</h4>\n                    <p>@{userInfo?.username}</p>   \n                  \n                </div>\n                <div className=\"post__info__edit\">\n                   \n                    <ClickAwayListener onClickAway={handleClickAway}>\n                        <div className='post_modal_root'>\n                        <MoreHorizIcon onClick={handleClick} style={{cursor:'pointer'}}/>\n                            {open ? (\n                            <div className='post_modal_dropdown'>\n                                <div onClick={()=>delPoll(id)} className=\"post_modal__option\">\n                                    <DeleteOutlineIcon style={{color:'red'}}/>\n                                    <h4>Delete</h4>\n                                </div>\n                                <div onClick={handleOpen} className=\"post_modal__option\">\n                                    <EditOutlinedIcon style={{color:'black',fontSize:'20px'}}/>\n                                    <h4 style={{color:'#000'}} >Edit</h4>\n                                </div>\n                            </div>\n                            ) : null}\n                        </div>\n                        </ClickAwayListener>\n                </div>\n                \n                </div>\n             \n                <div className=\"poll_cont\">\n                    <div className=\"poll__title\">\n                        <h4>{title}</h4>\n                    </div>\n                   \n                      <div className=\"poll__options\">\n                    {option1 &&\n                    <>\n                          <div className=\"poll__option\">\n                              <div className=\"poll__option_cont\"  onClick={func}>\n                               <div style={{width: checked ? '50px' : 'auto',background: checked ? 'rgb(202, 202, 202)' : 'none'}} className=\"poll__option_count\">\n                                   \n                                <input type=\"radio\" name=\"option\" id=\"\"/>\n                                <div className=\"poll__option__info\">\n                                    <h4>{option1}</h4>\n                                </div>\n                               </div>\n                              </div>\n                              <p>{count}</p>\n                         \n                          \n                        </div>\n                    </>\n                    }\n                    {option2 &&   \n                               <div className=\"poll__option\">\n                               <div className=\"poll__option_cont\"  onClick={func1}>\n                                <div style={{width: checked1 ? '50px' : 'auto',background: checked1 ? 'rgb(202, 202, 202)' : 'none'}} className=\"poll__option_count\">\n                                    \n                                 <input type=\"radio\" name=\"option\" id=\"\"/>\n                                 <div className=\"poll__option__info\">\n                                     <h4>{option2}</h4>\n                                 </div>\n                              \n                                </div>\n                               </div>\n                               <p>{count1}</p>\n                          \n                           \n                         </div>\n                        }\n                    {option3 && \n                                <div className=\"poll__option\">\n                                <div className=\"poll__option_cont\"  onClick={func2}>\n                                 <div style={{width: checked2 ? '50px' : 'auto',background: checked2 ? 'rgb(202, 202, 202)' : 'none'}} className=\"poll__option_count\">\n                                     \n                                  <input type=\"radio\" name=\"option\" id=\"\"/>\n                                  <div className=\"poll__option__info\">\n                                      <h4>{option3}</h4>\n                                  </div>\n                               \n                                 </div>\n                                </div>\n                                <p>{count2}</p>\n                           \n                            \n                          </div>\n                    }\n                    </div>\n                  \n                    </div>\n\n                    <button onClick={delFun} type=\"submit\">Delete Choice</button>\n                </div>\n                <Modal\n                open={Isopen}\n                onClose={handleClose}\n                aria-labelledby=\"simple-modal-title\"\n                aria-describedby=\"simple-modal-description\"\n             >\n                {body}\n            </Modal>\n        </div>\n    )\n}\n\nexport default Poll\n","/home/sab4/Desktop/twitter-clone/client/src/Icons/HomeIcon.js",[],"/home/sab4/Desktop/twitter-clone/client/src/Icons/Sharp.js",[],"/home/sab4/Desktop/twitter-clone/client/src/actions/userAction.js",[],"/home/sab4/Desktop/twitter-clone/client/src/components/ChatProfile.js",["101"],"import React,{useState,useEffect,useRef} from 'react'\nimport './ChatProfile.css'\nimport { useSelector } from \"react-redux\";\nimport Avatar from '@material-ui/core/Avatar';\nimport ClickAwayListener from '@material-ui/core/ClickAwayListener';\nimport MoreVertIcon from '@material-ui/icons/MoreVert';\nimport Axios from 'axios'\nfunction ChatProfile({message,messageimg,id}) {\n    const[modal,setModal] = useState(false)\n\n    const userLogin = useSelector((state) => state.userLogin);\n    const { userInfo } = userLogin;\n\n    const handleClick = () => {\n        setModal((prev) => !prev);\n      };\n    \n      const handleClickAway = () => {\n        setModal(false);\n      };\n\n    const messagesEndRef = useRef(null);\n    const scrollToBottom = () => {\n      messagesEndRef.current.scrollIntoView({ behavior: \"smooth\" });\n    }\n  \n    useEffect(scrollToBottom, [message]);\n    const delMsg = () =>{\n        Axios.delete(`http://localhost:3001/deleteMsg/${id}`)\n   \n          window. location.reload()\n    \n     \n      }\n    return (\n        <div>\n     <div className='chatProfile' >\n            <Avatar src={userInfo?.pic} />\n        <div className='chatProfile__info_cont'>\n        <div className='chatProfile__info'>\n          {message && <p>{message}</p>}\n            <div className=\"chatprofile__img\">\n                {messageimg && <img width='300px' src={messageimg}  alt=\"\"/>  }\n                \n            </div>\n            </div>\n            <ClickAwayListener onClickAway={handleClickAway}>\n                <div >\n                    <MoreVertIcon onClick={handleClick} className='chatProfile__icon' />\n                </div>\n    </ClickAwayListener>\n        </div>\n\n\n        {modal && (\n            <div className='chat__modal'>\n                <div onClick={delMsg} className=\"chat__modal_del\">\n                    <h4>Delete</h4>\n                </div>\n            </div>\n        )}\n        <div ref={messagesEndRef} />\n\n        </div>\n        </div>\n    )\n}\n\nexport default ChatProfile\n","/home/sab4/Desktop/twitter-clone/client/src/constants/userConstant.js",[],{"ruleId":"102","replacedBy":"103"},{"ruleId":"104","replacedBy":"105"},{"ruleId":"106","severity":1,"message":"107","line":16,"column":12,"nodeType":"108","messageId":"109","endLine":16,"endColumn":17},{"ruleId":"106","severity":1,"message":"110","line":16,"column":19,"nodeType":"108","messageId":"109","endLine":16,"endColumn":27},{"ruleId":"106","severity":1,"message":"111","line":20,"column":12,"nodeType":"108","messageId":"109","endLine":20,"endColumn":18},{"ruleId":"106","severity":1,"message":"112","line":28,"column":11,"nodeType":"108","messageId":"109","endLine":28,"endColumn":15},{"ruleId":"106","severity":1,"message":"113","line":28,"column":16,"nodeType":"108","messageId":"109","endLine":28,"endColumn":23},{"ruleId":"106","severity":1,"message":"111","line":15,"column":12,"nodeType":"108","messageId":"109","endLine":15,"endColumn":18},{"ruleId":"106","severity":1,"message":"114","line":18,"column":12,"nodeType":"108","messageId":"109","endLine":18,"endColumn":23},{"ruleId":"115","severity":1,"message":"116","line":66,"column":7,"nodeType":"117","messageId":"118","endLine":66,"endColumn":23,"fix":"119"},{"ruleId":"115","severity":1,"message":"116","line":80,"column":7,"nodeType":"117","messageId":"118","endLine":80,"endColumn":23,"fix":"120"},{"ruleId":"115","severity":1,"message":"116","line":92,"column":5,"nodeType":"117","messageId":"118","endLine":92,"endColumn":21,"fix":"121"},{"ruleId":"115","severity":1,"message":"116","line":84,"column":9,"nodeType":"117","messageId":"118","endLine":84,"endColumn":25,"fix":"122"},{"ruleId":"115","severity":1,"message":"116","line":91,"column":9,"nodeType":"117","messageId":"118","endLine":91,"endColumn":25,"fix":"123"},{"ruleId":"115","severity":1,"message":"116","line":31,"column":11,"nodeType":"117","messageId":"118","endLine":31,"endColumn":27,"fix":"124"},"no-native-reassign",["125"],"no-negated-in-lhs",["126"],"no-unused-vars","'posts' is assigned a value but never used.","Identifier","unusedVar","'setPosts' is assigned a value but never used.","'images' is assigned a value but never used.","'poll' is assigned a value but never used.","'setPoll' is assigned a value but never used.","'newFileData' is assigned a value but never used.","no-whitespace-before-property","Unexpected whitespace before property location.","MemberExpression","unexpectedWhitespace",{"range":"127","text":"128"},{"range":"129","text":"128"},{"range":"130","text":"128"},{"range":"131","text":"128"},{"range":"132","text":"128"},{"range":"133","text":"128"},"no-global-assign","no-unsafe-negation",[1723,1725],".",[1961,1963],[2221,2223],[2458,2460],[2611,2613],[973,975]]