{"ast":null,"code":"import{createStore,combineReducers,applyMiddleware}from\"redux\";import thunk from\"redux-thunk\";import{userLoginReducer,userRegisterReducer}from\"./reducers/useReducer\";import{composeWithDevTools}from\"redux-devtools-extension\";var reducer=combineReducers({userLogin:userLoginReducer,userRegister:userRegisterReducer});var userInfoFromStorage=localStorage.getItem(\"userInfo\")?JSON.parse(localStorage.getItem(\"userInfo\")):null;var initialState={userLogin:{userInfo:userInfoFromStorage}};var middleware=[thunk];var store=createStore(reducer,initialState,composeWithDevTools(applyMiddleware.apply(void 0,middleware)));export default store;","map":{"version":3,"sources":["/home/sab4/Desktop/twitter-clone/client/src/store.js"],"names":["createStore","combineReducers","applyMiddleware","thunk","userLoginReducer","userRegisterReducer","composeWithDevTools","reducer","userLogin","userRegister","userInfoFromStorage","localStorage","getItem","JSON","parse","initialState","userInfo","middleware","store"],"mappings":"AAAA,OAASA,WAAT,CAAsBC,eAAtB,CAAuCC,eAAvC,KAA8D,OAA9D,CACA,MAAOC,CAAAA,KAAP,KAAkB,aAAlB,CACA,OACIC,gBADJ,CAEIC,mBAFJ,KAGS,uBAHT,CAIE,OAASC,mBAAT,KAAoC,0BAApC,CACA,GAAMC,CAAAA,OAAO,CAAGN,eAAe,CAAC,CAC9BO,SAAS,CAAEJ,gBADmB,CAE9BK,YAAY,CAAEJ,mBAFgB,CAAD,CAA/B,CAKA,GAAMK,CAAAA,mBAAmB,CAAGC,YAAY,CAACC,OAAb,CAAqB,UAArB,EAC1BC,IAAI,CAACC,KAAL,CAAWH,YAAY,CAACC,OAAb,CAAqB,UAArB,CAAX,CAD0B,CAE1B,IAFF,CAIF,GAAMG,CAAAA,YAAY,CAAG,CACnBP,SAAS,CAAE,CAAEQ,QAAQ,CAAEN,mBAAZ,CADQ,CAArB,CAIA,GAAMO,CAAAA,UAAU,CAAG,CAACd,KAAD,CAAnB,CAEA,GAAMe,CAAAA,KAAK,CAAGlB,WAAW,CACvBO,OADuB,CAEvBQ,YAFuB,CAGvBT,mBAAmB,CAACJ,eAAe,MAAf,QAAmBe,UAAnB,CAAD,CAHI,CAAzB,CAMA,cAAeC,CAAAA,KAAf","sourcesContent":["import { createStore, combineReducers, applyMiddleware } from \"redux\";\nimport thunk from \"redux-thunk\";\nimport {\n    userLoginReducer,\n    userRegisterReducer,\n  } from \"./reducers/useReducer\";\n  import { composeWithDevTools } from \"redux-devtools-extension\";\n  const reducer = combineReducers({\n    userLogin: userLoginReducer,\n    userRegister: userRegisterReducer,\n  });\n\n  const userInfoFromStorage = localStorage.getItem(\"userInfo\")\n  ? JSON.parse(localStorage.getItem(\"userInfo\"))\n  : null;\n\nconst initialState = {\n  userLogin: { userInfo: userInfoFromStorage },\n};\n\nconst middleware = [thunk];\n\nconst store = createStore(\n  reducer,\n  initialState,\n  composeWithDevTools(applyMiddleware(...middleware))\n);\n\nexport default store;"]},"metadata":{},"sourceType":"module"}