{"ast":null,"code":"import { USER_LOGIN_FAIL, USER_LOGIN_REQUEST, USER_LOGIN_SUCCESS, USER_LOGOUT, USER_REGISTER_FAIL, USER_REGISTER_REQUEST, USER_REGISTER_SUCCESS } from \"../constants/userConstant\";\nimport axios from \"axios\";\nexport const logout = () => async dispatch => {\n  localStorage.removeItem(\"userInfo\");\n  dispatch({\n    type: USER_LOGOUT\n  });\n};\nexport const login = (email, password) => async dispatch => {\n  try {\n    dispatch({\n      type: USER_LOGIN_REQUEST\n    });\n    const config = {\n      headers: {\n        \"Content-type\": \"application/json\"\n      }\n    };\n    const {\n      data\n    } = await axios.post(\"http://localhost:3001/login\", {\n      email,\n      password\n    }, config);\n    dispatch({\n      type: USER_LOGIN_SUCCESS,\n      payload: data\n    });\n    dispatch({\n      type: USER_REGISTER_SUCCESS,\n      payload: data\n    });\n    localStorage.setItem(\"userInfo\", JSON.stringify(data));\n    console.log(data);\n  } catch (error) {\n    dispatch({\n      type: USER_LOGIN_FAIL,\n      payload: error.response && error.response.data.message ? error.response.data.message : error.message\n    });\n  }\n};\nexport const register = (username, email, password, pic) => async dispatch => {\n  try {\n    dispatch({\n      type: USER_REGISTER_REQUEST\n    });\n    const config = {\n      headers: {\n        \"Content-type\": \"application/json\"\n      }\n    };\n    const {\n      data\n    } = await axios.post(\"http://localhost:3001/register\", {\n      username,\n      email,\n      pic,\n      password\n    }, config);\n    dispatch({\n      type: USER_REGISTER_SUCCESS,\n      payload: data\n    });\n    dispatch({\n      type: USER_LOGIN_SUCCESS,\n      payload: data\n    });\n    localStorage.setItem(\"userInfo\", JSON.stringify(data));\n    console.log(data);\n  } catch (error) {\n    dispatch({\n      type: USER_REGISTER_FAIL,\n      payload: error.response && error.response.data.message ? error.response.data.message : error.message\n    });\n  }\n};","map":{"version":3,"sources":["/home/sab4/Desktop/twitter-clone/client/src/actions/userAction.js"],"names":["USER_LOGIN_FAIL","USER_LOGIN_REQUEST","USER_LOGIN_SUCCESS","USER_LOGOUT","USER_REGISTER_FAIL","USER_REGISTER_REQUEST","USER_REGISTER_SUCCESS","axios","logout","dispatch","localStorage","removeItem","type","login","email","password","config","headers","data","post","payload","setItem","JSON","stringify","console","log","error","response","message","register","username","pic"],"mappings":"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","sourcesContent":["\nimport {\n  USER_LOGIN_FAIL,\n  USER_LOGIN_REQUEST,\n  USER_LOGIN_SUCCESS,\n  USER_LOGOUT,\n  USER_REGISTER_FAIL,\n  USER_REGISTER_REQUEST,\n  USER_REGISTER_SUCCESS,\n  } from \"../constants/userConstant\";\n  import axios from \"axios\";\n\n  export const logout = () => async (dispatch) => {\n    localStorage.removeItem(\"userInfo\");\n    dispatch({ type: USER_LOGOUT });\n  };\n  \n\n  export const login = (email, password) => async (dispatch) => {\n    try {\n      dispatch({ type: USER_LOGIN_REQUEST });\n      const config = {\n        headers: {\n          \"Content-type\": \"application/json\",\n        },\n      };\n  \n      const { data } = await axios.post(\n        \"http://localhost:3001/login\",\n        { email, password },\n        config\n      );\n  \n      dispatch({ type: USER_LOGIN_SUCCESS, payload: data });\n      dispatch({ type: USER_REGISTER_SUCCESS, payload: data });\n  \n      localStorage.setItem(\"userInfo\", JSON.stringify(data));\n      console.log(data)\n    } catch (error) {\n      dispatch({\n        type: USER_LOGIN_FAIL,\n        payload:\n          error.response && error.response.data.message\n            ? error.response.data.message\n            : error.message,\n      });\n\n    }\n  };\n  \n\n\nexport const register = (username, email, password,pic) => async (dispatch) => {\n    try {\n      dispatch({ type: USER_REGISTER_REQUEST });\n  \n      const config = {\n        headers: {\n          \"Content-type\": \"application/json\",\n        },\n      };\n  \n      const { data } = await axios.post(\"http://localhost:3001/register\",\n        { username,  email,pic, password },\n        config\n      );\n  \n      dispatch({ type: USER_REGISTER_SUCCESS, payload: data });\n  \n      dispatch({ type: USER_LOGIN_SUCCESS, payload: data });\n      localStorage.setItem(\"userInfo\", JSON.stringify(data));\n      console.log(data)\n    } catch (error) {\n      dispatch({\n        type: USER_REGISTER_FAIL,\n        payload:\n          error.response && error.response.data.message\n            ? error.response.data.message\n            : error.message,\n      });\n    }\n  };\n  "]},"metadata":{},"sourceType":"module"}