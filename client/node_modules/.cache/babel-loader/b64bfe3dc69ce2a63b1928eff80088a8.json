{"ast":null,"code":"import { createStore, combineReducers, applyMiddleware } from \"redux\";\nimport thunk from \"redux-thunk\";\nimport { userLoginReducer, userRegisterReducer } from \"./reducers/useReducer\";\nimport { composeWithDevTools } from \"redux-devtools-extension\";\nconst reducer = combineReducers({\n  userLogin: userLoginReducer,\n  userRegister: userRegisterReducer\n});\nconst userInfoFromStorage = localStorage.getItem(\"userInfo\") ? JSON.parse(localStorage.getItem(\"userInfo\")) : null;\nconst initialState = {\n  userLogin: {\n    userInfo: userInfoFromStorage\n  }\n};\nconst middleware = [thunk];\nconst store = createStore(reducer, initialState, composeWithDevTools(applyMiddleware(...middleware)));\nexport default store;","map":{"version":3,"sources":["/home/sab4/Desktop/twitter-clone/client/src/store.js"],"names":["createStore","combineReducers","applyMiddleware","thunk","userLoginReducer","userRegisterReducer","composeWithDevTools","reducer","userLogin","userRegister","userInfoFromStorage","localStorage","getItem","JSON","parse","initialState","userInfo","middleware","store"],"mappings":"AAAA,SAASA,WAAT,EAAsBC,eAAtB,EAAuCC,eAAvC,QAA8D,OAA9D;AACA,OAAOC,KAAP,MAAkB,aAAlB;AACA,SACIC,gBADJ,EAEIC,mBAFJ,QAGS,uBAHT;AAIE,SAASC,mBAAT,QAAoC,0BAApC;AACA,MAAMC,OAAO,GAAGN,eAAe,CAAC;AAC9BO,EAAAA,SAAS,EAAEJ,gBADmB;AAE9BK,EAAAA,YAAY,EAAEJ;AAFgB,CAAD,CAA/B;AAKA,MAAMK,mBAAmB,GAAGC,YAAY,CAACC,OAAb,CAAqB,UAArB,IAC1BC,IAAI,CAACC,KAAL,CAAWH,YAAY,CAACC,OAAb,CAAqB,UAArB,CAAX,CAD0B,GAE1B,IAFF;AAIF,MAAMG,YAAY,GAAG;AACnBP,EAAAA,SAAS,EAAE;AAAEQ,IAAAA,QAAQ,EAAEN;AAAZ;AADQ,CAArB;AAIA,MAAMO,UAAU,GAAG,CAACd,KAAD,CAAnB;AAEA,MAAMe,KAAK,GAAGlB,WAAW,CACvBO,OADuB,EAEvBQ,YAFuB,EAGvBT,mBAAmB,CAACJ,eAAe,CAAC,GAAGe,UAAJ,CAAhB,CAHI,CAAzB;AAMA,eAAeC,KAAf","sourcesContent":["import { createStore, combineReducers, applyMiddleware } from \"redux\";\nimport thunk from \"redux-thunk\";\nimport {\n    userLoginReducer,\n    userRegisterReducer,\n  } from \"./reducers/useReducer\";\n  import { composeWithDevTools } from \"redux-devtools-extension\";\n  const reducer = combineReducers({\n    userLogin: userLoginReducer,\n    userRegister: userRegisterReducer,\n  });\n\n  const userInfoFromStorage = localStorage.getItem(\"userInfo\")\n  ? JSON.parse(localStorage.getItem(\"userInfo\"))\n  : null;\n\nconst initialState = {\n  userLogin: { userInfo: userInfoFromStorage },\n};\n\nconst middleware = [thunk];\n\nconst store = createStore(\n  reducer,\n  initialState,\n  composeWithDevTools(applyMiddleware(...middleware))\n);\n\nexport default store;"]},"metadata":{},"sourceType":"module"}